The tree has ~(n / a) layers, so the total runtime is on the order of
cn + cn + (cn - ca) + (cn - 2ca) + ... + Θ(1) = O(n^2).

Suppose T(m) ≤ bm^2 ∀ m < n. Then
T(n) = T(n - a) + T(a) + cn
     ≤ b(n - a)^2 + T(a) + cn
     = bn^2 - 2bna + ba^2 + T(a) + cn
     ≤ bn^2
so long as
b ≥ (T(a) + cn) / (2na - a^2).
So T(n) = O(n^2).

Suppose T(m) ≥ bm^2 ∀ m < n. Then
T(n) = T(n - a) + T(a) + cn
     ≥ b(n - a)^2 + T(a) + cn
     = bn^2 - 2bna + ba^2 + T(a) + cn
     ≥ bn^2
so long as
b ≥ (T(a) + cn) / (2na - a^2).
So T(n) = Ω(n^2).

∴ T(n) = Θ(n^2).
